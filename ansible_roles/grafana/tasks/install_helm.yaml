---
- name: Check if Helm is already installed
  ansible.builtin.stat:
    path: "{{ helm_install_dir }}/helm"
  register: helm_binary
  tags:
    - helm

- name: Download and install Helm
  when: not helm_binary.stat.exists
  block:
    - name: Create temporary directory for Helm download
      ansible.builtin.tempfile:
        state: directory
        prefix: helm_download_
      register: temp_helm_dir

    - name: Download Helm tarball
      ansible.builtin.get_url:
        url: "https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz"
        dest: "{{ temp_helm_dir.path }}/helm.tar.gz"
        mode: '0644'

    - name: Unarchive Helm tarball
      ansible.builtin.unarchive:
        src: "{{ temp_helm_dir.path }}/helm.tar.gz"
        dest: "{{ temp_helm_dir.path }}"
        remote_src: yes # Indicates that the src is on the managed node

    - name: Install Helm binary
      ansible.builtin.copy:
        src: "{{ temp_helm_dir.path }}/linux-amd64/helm"
        dest: "{{ helm_install_dir }}/helm"
        mode: '0755'
        remote_src: yes
      become: true # Usually /usr/local/bin requires sudo

    - name: Clean up Helm temporary directory
      ansible.builtin.file:
        path: "{{ temp_helm_dir.path }}"
        state: absent
      when: temp_helm_dir.path is defined

- name: Add Prometheus Community Helm repository
  community.kubernetes.helm_repository:
    name: prometheus-community
    repo_url: "{{ node_exporter_chart_repo }}" # Same repo for prometheus and node-exporter
    state: present

- name: Add Grafana Helm repository
  community.kubernetes.helm_repository:
    name: grafana
    repo_url: "{{ grafana_chart_repo }}"
    state: present

- name: Update Helm repositories
  ansible.builtin.command: "{{ helm_install_dir }}/helm repo update"
  changed_when: false # repo update doesn't have a good changed status